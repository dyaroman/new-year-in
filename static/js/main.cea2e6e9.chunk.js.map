{"version":3,"sources":["misc/digit2array.js","components/SevenSegment/SevenSegment.js","components/Divider/Divider.js","misc/getTime.js","hooks/useInterval.js","App.js","index.js"],"names":["digit2array","digit","array","push","SevenSegment","props","activeSegments","className","map","key","includes","Divider","getTime","now","Date","timezoneOffset","getTimezoneOffset","diffTime","parse","getFullYear","str","days","Math","floor","hours","minutes","seconds","split","i","parseInt","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","App","useState","time","setTime","b","length","f","unshift","day","index","hour","minute","second","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cea2e6e9.chunk.js","sourcesContent":["function digit2array(digit) {\n  const array = [];\n  switch (digit) {\n    case 0:\n      array.push(1, 2, 3, 4, 5, 6);\n      break;\n    case 1:\n      array.push(2, 3);\n      break;\n    case 2:\n      array.push(1, 2, 4, 5, 7);\n      break;\n    case 3:\n      array.push(1, 2, 3, 4, 7);\n      break;\n    case 4:\n      array.push(2, 3, 6, 7);\n      break;\n    case 5:\n      array.push(1, 3, 4, 6, 7);\n      break;\n    case 6:\n      array.push(1, 3, 4, 5, 6, 7);\n      break;\n    case 7:\n      array.push(1, 2, 3);\n      break;\n    case 8:\n      array.push(1, 2, 3, 4, 5, 6, 7);\n      break;\n    case 9:\n      array.push(1, 2, 3, 4, 6, 7);\n      break;\n    default:\n  }\n  return array;\n}\n\nexport default digit2array;\n","import React from \"react\";\n\nimport \"./SevenSegment.scss\";\nimport digit2array from \"../../misc/digit2array\";\n\nfunction SevenSegment(props) {\n  const { digit } = props;\n  const activeSegments = digit2array(digit);\n\n  return (\n    <div className=\"SevenSegment\">\n      {[1, 2, 3, 4, 5, 6, 7].map((key) => (\n        <div\n          className={activeSegments.includes(key) ? \"show\" : null}\n          key={key}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default SevenSegment;\n","import React from \"react\";\n\nimport \"./Divider.scss\";\n\nfunction Divider() {\n  return <div className=\"Divider\" />;\n}\n\nexport default Divider;\n","function getTime() {\n  const now = new Date();\n  const timezoneOffset = now.getTimezoneOffset() * 60 * 1000;\n  const diffTime =\n    Date.parse(`01 Jan ${now.getFullYear() + 1} 00:00:00 GMT`) +\n    timezoneOffset -\n    now;\n  let str = \"\";\n\n  let days = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  let hours = Math.floor(diffTime / (1000 * 60 * 60));\n  hours = hours % 24;\n  let minutes = Math.floor(diffTime / (1000 * 60));\n  minutes = minutes % 60;\n  let seconds = Math.floor(diffTime / 1000);\n  seconds = seconds % 60;\n\n  str += days;\n  if (hours < 10) str += 0;\n  str += hours;\n  if (minutes < 10) str += 0;\n  str += minutes;\n  if (seconds < 10) str += 0;\n  str += seconds;\n\n  return str.split(\"\").map((i) => parseInt(i));\n}\n\nexport default getTime;\n","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;\n","import React, { useState } from \"react\";\n\nimport \"./App.scss\";\nimport SevenSegment from \"./components/SevenSegment/SevenSegment\";\nimport Divider from \"./components/Divider/Divider\";\nimport getTime from \"./misc/getTime\";\nimport useInterval from \"./hooks/useInterval\";\n\nfunction App() {\n  const [time, setTime] = useState(() => getTime());\n\n  useInterval(() => {\n    setTime(getTime());\n  }, 1000);\n\n  const seconds = [];\n  const minutes = [];\n  const hours = [];\n  const days = [];\n\n  for (let b = time.length, f = 0; b > 0; b--, f++) {\n    if (f < 2) {\n      seconds.unshift(time[b - 1]);\n    } else if (f < 4) {\n      minutes.unshift(time[b - 1]);\n    } else if (f < 6) {\n      hours.unshift(time[b - 1]);\n    } else {\n      days.unshift(time[b - 1]);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {days &&\n        days.map((day, index) => <SevenSegment digit={day} key={index} />)}\n\n      {days && <Divider />}\n\n      {hours &&\n        hours.map((hour, index) => <SevenSegment digit={hour} key={index} />)}\n\n      {hours && <Divider />}\n\n      {minutes &&\n        minutes.map((minute, index) => (\n          <SevenSegment digit={minute} key={index} />\n        ))}\n\n      {minutes && <Divider />}\n\n      {seconds &&\n        seconds.map((second, index) => (\n          <SevenSegment digit={second} key={index} />\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}